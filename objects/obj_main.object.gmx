<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
lvl_btn_dir_spd = 4;
is_lvl_sel = false;
alpha_dir = 0;

alpha_back = 0.5;

is_debug = true;
enum states {
    main,
    lvl_sel,
    brief,
    editor,
    loader,
    play,
    dialog
}

dis_w = obj_appsurf.dis_w;
dis_h = obj_appsurf.dis_h;
//dis_w = display_get_width();
//dis_h = display_get_height();
//dis_w = room_width;
//dis_h = room_height;

view_wview[0] = dis_w;
view_hview[0] = dis_h;
view_wport[0] = dis_w;
view_hport[0] = dis_h;

galaxies_scale = min(dis_w /1920, dis_h /1080);

fps_r = string(room_speed);
alarm[0] = 30;
state = states.dialog;

instance_create(0, 0, obj_dialog);

create_galaxies();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
fps_r = string(floor(fps_real));
alarm[0] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// ESC - exit
// AE - Editor

if (alpha_dir &lt;= 90) {
    alpha_dir++;
    obj_appsurf.alpha = -lengthdir_y(0.3, alpha_dir);
}

if (keyboard_check_pressed(vk_escape)) {
    if (instance_exists(obj_field)) {
        obj_appsurf.energy -= obj_field.apmap.energy;
        with (obj_field) {
            instance_destroy();
        }
        with (obj_planet) {
            instance_destroy();
        }
        with (obj_planet_panel) {
            instance_destroy();
        }
        state = states.main;
        create_galaxies();
    } else {
        game_end();
    }
}

if (is_debug) {
    if (keyboard_check_pressed(ord('E')) &amp;&amp; keyboard_check(ord('A')) &amp;&amp; !instance_exists(obj_field)) {
        state = states.editor;
        with (instance_create(0, 0, obj_field)) {
            event_user(0);
        }
        destroy_galaxies();
    }
    if (keyboard_check_pressed(ord('S')) &amp;&amp; keyboard_check(vk_lcontrol) &amp;&amp; state == states.editor) {
        var file = get_save_filename("AP map|*.apmap", "");
        var file_writer = file_text_open_write(file);
        file_text_write_string(file_writer, "#size");
        file_text_writeln(file_writer);
        file_text_write_string(file_writer, string(obj_field.map_w));
        file_text_writeln(file_writer);
        file_text_write_string(file_writer, string(obj_field.map_h));
        file_text_writeln(file_writer);
        file_text_write_string(file_writer, "#energy");
        file_text_writeln(file_writer);
        file_text_write_string(file_writer, string(0));
        file_text_writeln(file_writer);
        file_text_write_string(file_writer, "#field");
        file_text_writeln(file_writer);
        for (var i = 0; i &lt; obj_field.map_h; i++) {
            var str = "";
            for (var j = 0; j &lt; obj_field.map_w; j++) {
                str += string(ds_grid_get(obj_field.map, j, i));
            }
            file_text_write_string(file_writer, str);
            file_text_writeln(file_writer);
        }
        file_text_close(file_writer);
    }
    if (keyboard_check_pressed(ord('O')) &amp;&amp; keyboard_check(vk_lcontrol) &amp;&amp; state == states.main) {
        state = states.loader;
        destroy_galaxies();
        instance_create(0, 0, obj_field);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
draw_set_color(c_white);
draw_set_font(font_e4_24);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text(0, 0, "FPS = " + fps_r);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
