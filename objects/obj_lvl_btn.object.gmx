<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lvl_btn</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
is_in_move = true;
scale = 1;
color = make_colour_hsv(irandom(255), 255, 255);
dir_center = random(360);
dist_center = obj_galaxy.dist_center;
spr_w = sprite_get_width(spr_galaxy);
spr_h = sprite_get_height(spr_galaxy);
move_dir = 0;
move_target = moveTarget.in;
move_back = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (is_in_move) {
    move_dir += obj_main.lvl_btn_dir_spd;
    if (move_dir &gt;= 180) {
        move_dir = 0;
        if (move_back) {
            move_back = false;
            if (move_target == moveTarget.in) {
                move_target = moveTarget.out;
            } else {
                move_target = moveTarget.in;
            }
        } else {
            is_in_move = false;
            if (move_target == moveTarget.out) {
                instance_destroy();
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var dist = point_distance(0, 0, spr_w /2 * scale, spr_h /2 * scale) + dist_center;
var x_out = obj_main.dis_w /2 + lengthdir_x(dist, dir_center);
var y_out = obj_main.dis_h /2 + lengthdir_y(dist, dir_center);
var ldx = (lengthdir_x(1, move_dir) +1) /2;

if (is_in_move) {
    if (move_target = moveTarget.in) {
        draw_sprite_ext(spr_lvl_btn, 0,
            x + ldx * (x_out - x),
            y + ldx * (y_out - y),
            image_xscale, image_yscale, 0, color, 1);
    } else {
        draw_sprite_ext(spr_lvl_btn, 0,
            x_out - ldx * (x_out - x),
            y_out - ldx * (y_out - y),
            image_xscale, image_yscale, 0, color, 1);
    }
} else if (move_target == moveTarget.in) {
    draw_sprite_ext(spr_lvl_btn, 0, x, y, image_xscale, image_yscale, 0, color, 1);
} else {
    draw_sprite_ext(spr_lvl_btn, 0, x_out, y_out, image_xscale, image_yscale, 0, color, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
