<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_briefing_window</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
on_close = false;
obj_main.state = states.brief;
//index_house = 1;
//index_lvl = 1;

spr_w = sprite_get_width(spr_briefing_window);
spr_h = sprite_get_height(spr_briefing_window);

x = obj_main.dis_w /2;
y = -sprite_get_height(spr_briefing_window) /2;
level_label_pos = spr_h /4;
dir = 0;
dir_spd = 4;
y_to = obj_main.dis_h /2;
y_diff = (y_to - y) /2;
y_mean = (y_to + y) /2;

child = instance_create(spr_w /8, level_label_pos - spr_h / 16, obj_briefing_btn_play);
child.par = id;
child.x = x + spr_w;
child.y = y + level_label_pos;
apmap = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
with (child) {
    instance_destroy();
}
if (apmap != noone) {
    with (apmap) {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (apmap == noone) {
    apmap = instance_create(0, 0, obj_apmap);
    apmap.filename = "lvl_" + string(index_house) + "_" + string(index_lvl) + ".apmap";
    with (apmap) {
        event_user(0);
    }
}

dir += dir_spd;
if (dir &gt;= 180) {
    dir = 180;
    y = y_to;
} else if (dir &lt; 0) {
    instance_destroy();
}
y = y_mean - lengthdir_x(y_diff, dir);

if (mouse_check_button_pressed(mb_left)) {
    
    // TODO: Fix many clickes
    
    if (on_close == false &amp;&amp; obj_main.state == states.brief &amp;&amp; abs(mouse_x - x) &gt; spr_w /2 || abs(mouse_y - y) &gt; spr_h /2) {
        dir_spd = -dir_spd;
        obj_main.state = states.main;
        on_close = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_color(c_black);
if (dir &lt; 180) {
    draw_set_alpha(obj_main.alpha_back - lengthdir_x(obj_main.alpha_back, dir /2));
} else {
    draw_set_alpha(obj_main.alpha_back);
}
draw_rectangle(0, 0, obj_main.dis_w, obj_main.dis_h, false);
draw_set_alpha(1);
draw_sprite(spr_briefing_window, 0, x, y);
draw_sprite(spr_sci, 0, x - spr_w /4, y + spr_h /2 - 60);
draw_set_color(c_white);
draw_set_font(font_e4_36);
draw_text(x + spr_w /8, y - level_label_pos + spr_h /16, "Level   " + string(index_house) + " : " + string(index_lvl));
if (apmap != noone) {
    draw_text(x + spr_w /8, y, "Energy: " + string(apmap.energy));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
